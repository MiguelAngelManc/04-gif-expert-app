{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","getGifs","categoria","a","fetchUrl","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","require","useEffect","GifGrid","loading","state","setstate","then","imgs","useFetchGifs","imagenes","x","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"iNAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,uBAAMC,SARgB,SAAAC,GACtBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,GACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAI3C,UACI,8CACA,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,c,QCUhBG,EAfK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAG7B,OACI,sBAAKC,UAAU,yCAAf,UACI,4BAAIF,IACJ,qBAAKG,IAAKF,Q,uBCTTG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEJ,mCACD,GAERC,EALa,uDAEJ,mCAFI,cAK0DC,UAAUH,GALpE,kBAGL,IAHK,SAQAI,MAAMF,GARN,cAQbG,EARa,gBASEA,EAAKC,OATP,uBASZC,EATY,EASZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QAftB,kBAoBZY,GApBY,4CAAH,sD,ECEYK,EAAQ,GAAhCjC,E,EAAAA,SAAUkC,E,EAAAA,UCyBHC,EAtBC,SAAC,GAAiB,IAAhBf,EAAe,EAAfA,UAAe,EDDL,SAACA,GAAc,IAAD,EACZpB,EAAS,CAC/B2B,KAAM,GACNS,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAJ,GAAU,WACNf,EAAQC,GACHmB,MAAM,SAAAC,GACCF,EAAS,CACLX,KAAMa,EACNJ,SAAQ,SAG1B,IAEKC,ECb4BI,CAAarB,GAAnCsB,EAFgB,EAErBf,KAAeS,EAFM,EAENA,QAGvB,OACI,qCACI,6BAAKhB,IAEJgB,GAAW,mBAAGnB,UAAU,mCAAb,0BAEZ,qBAAKA,UAAU,aAAf,SACKyB,EAASb,KAAI,SAAAc,GAAC,OAAE,cAAC,EAAD,eAAiBA,aCkBnCC,EA9BM,WAAK,MAGc5C,mBAAS,CAAC,YAAY,YAAY,gBAHhD,mBAGf6C,EAHe,KAGH9C,EAHG,KAYtB,OAAO,qCACH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI8C,EAAWhB,KAAI,SAAAc,GAAC,OACX,cAAC,EAAD,CAEGvB,UAAWuB,GADNA,YCnBzBG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eaa6d9e8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = e =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleInputSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2)\r\n            setCategorias( cats => [inputValue, ...cats])\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleInputSubmit}>\r\n            <h2>Add category</h2>  \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias:PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={url} />\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async (categoria) =>{\r\n\r\n    const apiKey = '8jfZDBe1e4BHxCcP1wXE5ngoE5I6sVLX'\r\n    const limit = 10\r\n\r\n    const fetchUrl = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(categoria)}&limit=${limit}`\r\n\r\n\r\n    const resp = await fetch(fetchUrl)\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n\r\n        }\r\n    })\r\n \r\n    return gifs;\r\n\r\n}","import { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst { useState, useEffect } = require(\"react\");\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(categoria)\r\n            .then( imgs =>{\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading:false,\r\n                    })\r\n            });\r\n    },[])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({categoria}) => {\r\n\r\n    const { data:imagenes, loading } = useFetchGifs(categoria);\r\n\r\n\r\n    return ( \r\n        <>\r\n            <h3>{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando... </p>}\r\n\r\n            <div className=\"card-grid \">\r\n                {imagenes.map(x=><GifGridItem {...x} />)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categorias = ['One Punch','Samurai X','Dragon Ball']\r\n    const [categorias, setCategorias] = useState(['One Punch','Samurai X','Dragon Ball'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     const newCategorias = [...categorias, 'TEST']\r\n    //     setCateorias(newCategorias)\r\n    // }\r\n\r\n\r\n\r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias} />\r\n        <hr />\r\n\r\n        <ul>\r\n        {\r\n            categorias.map(x =>\r\n                (<GifGrid \r\n                    key={x}\r\n                    categoria={x}/>)\r\n            )\r\n        }\r\n        </ul>\r\n    </>\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport GifExpertApp from \"./components/GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}